import streamlit as st
from loai.upload_part import detect_face_from_upload
from loai.camera_part import detect_face_from_camera
from loai.webcam_part import detect_face_from_webcam  # b·∫°n s·∫Ω t·∫°o th√™m file n√†y

# Ti√™u ƒë·ªÅ ·ª©ng d·ª•ng
st.title(":white_check_mark:·ª®ng d·ª•ng Nh·∫≠n di·ªán Khu√¥n m·∫∑t")

# Th√™m t√πy ch·ªçn
option = st.selectbox("Ch·ªçn c√°ch nh·∫≠n di·ªán khu√¥n m·∫∑t:", ["T·∫£i ·∫£nh l√™n", "S·ª≠ d·ª•ng camera", "Video tr·ª±c ti·∫øp (webcam)"])

if option == "T·∫£i ·∫£nh l√™n":
    uploaded_file = st.file_uploader("Ch·ªçn h√¨nh ·∫£nh...", type=["jpg", "jpeg", "png"])
    if uploaded_file is not None:
        image_rgb = detect_face_from_upload(uploaded_file)

        cols = st.columns([1, 2, 1])  # Chia giao di·ªán th√†nh 3 c·ªôt: tr√°i (1), gi·ªØa (2), ph·∫£i (1)
        with cols[1]:  # C·ªôt ·ªü gi·ªØa
            st.image(image_rgb, caption='Khu√¥n m·∫∑t ƒë∆∞·ª£c nh·∫≠n di·ªán', width=300)

elif option == "S·ª≠ d·ª•ng camera":
    camera_input = st.camera_input("Ch·ª•p ·∫£nh t·ª´ camera")
    if camera_input is not None:
        image_rgb = detect_face_from_camera(camera_input)
        st.image(image_rgb, caption='Khu√¥n m·∫∑t ƒë∆∞·ª£c nh·∫≠n di·ªán t·ª´ camera', use_container_width=True)

elif option == "Video tr·ª±c ti·∫øp (webcam)":
    status = st.empty()  # t·∫°o m·ªôt placeholder
    if st.button("B·∫Øt ƒë·∫ßu webcam"):
        status.info("üìπ ƒêang s·ª≠ d·ª•ng webcam, nh·∫•n Enter ƒë·ªÉ tho√°t.")
        detect_face_from_webcam()  # ch·∫°y lu√¥n code OpenCV
        status.empty()
    